buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

ext.publicConfigFile = file('public_build.properties')

ext.publicConfig = parseConfig(publicConfigFile)

version = publicConfig.version_major + "." + publicConfig.version_minor + "." + publicConfig.version_patch + "." + publicConfig.version_build
group = "NetherEx"
archivesBaseName = "NetherEx-" + publicConfig.minecraft_version.toString()

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = publicConfig.minecraft_version + "-" + publicConfig.forge_version
    mappings = publicConfig.mappings_version
    runDir = "run"
    replace '@VERSION@', project.version
    makeObfSourceJar = false
}

repositories {
}

dependencies {
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

static def parseConfig(File file) {
    file.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

task incrementBuildNumber << {
    publicConfig.version_build = (publicConfig.version_build.toInteger()) + 1

    publicConfigFile.withWriter {
        publicConfig.toProperties().store(it, "")
    }
}

build.dependsOn incrementBuildNumber
